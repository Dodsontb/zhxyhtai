<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhxy.dao.ClassroomMapper">
  <resultMap id="BaseResultMap" type="com.zhxy.domain.Classroom">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="floor" jdbcType="INTEGER" property="floor" />
    <result column="inclass" jdbcType="BIT" property="inclass" />
    <result column="forstudy" jdbcType="BIT" property="forstudy" />
    <result column="fortest" jdbcType="BIT" property="fortest" />
    <result column="enable" jdbcType="BIT" property="enable" />
    <result column="people" jdbcType="INTEGER" property="people" />
    <result column="name1" jdbcType="VARCHAR" property="name1" />
    <result column="name2" jdbcType="VARCHAR" property="name2" />
    <result column="name3" jdbcType="VARCHAR" property="name3" />
    <result column="name4" jdbcType="VARCHAR" property="name4" />
    <result column="name5" jdbcType="VARCHAR" property="name5" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, floor, inclass, forstudy, fortest, enable, people, name1, name2, name3, 
    name4, name5
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from classroom
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from classroom
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhxy.domain.Classroom">
    insert into classroom (id, name, floor, 
      inclass, forstudy, fortest, enable, 
      people, name1, name2, 
      name3, name4, name5
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{floor,jdbcType=INTEGER}, 
      #{inclass,jdbcType=BIT}, #{forstudy,jdbcType=BIT}, #{fortest,jdbcType=BIT}, #{enable,jdbcType=BIT}, 
      #{people,jdbcType=INTEGER}, #{name1,jdbcType=VARCHAR}, #{name2,jdbcType=VARCHAR}, 
      #{name3,jdbcType=VARCHAR}, #{name4,jdbcType=VARCHAR}, #{name5,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhxy.domain.Classroom">
    insert into classroom
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="floor != null">
        floor,
      </if>
      <if test="inclass != null">
        inclass,
      </if>
      <if test="forstudy != null">
        forstudy,
      </if>
      <if test="fortest != null">
        fortest,
      </if>
      <if test="enable != null">
        enable,
      </if>
      <if test="people != null">
        people,
      </if>
      <if test="name1 != null">
        name1,
      </if>
      <if test="name2 != null">
        name2,
      </if>
      <if test="name3 != null">
        name3,
      </if>
      <if test="name4 != null">
        name4,
      </if>
      <if test="name5 != null">
        name5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="floor != null">
        #{floor,jdbcType=INTEGER},
      </if>
      <if test="inclass != null">
        #{inclass,jdbcType=BIT},
      </if>
      <if test="forstudy != null">
        #{forstudy,jdbcType=BIT},
      </if>
      <if test="fortest != null">
        #{fortest,jdbcType=BIT},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=BIT},
      </if>
      <if test="people != null">
        #{people,jdbcType=INTEGER},
      </if>
      <if test="name1 != null">
        #{name1,jdbcType=VARCHAR},
      </if>
      <if test="name2 != null">
        #{name2,jdbcType=VARCHAR},
      </if>
      <if test="name3 != null">
        #{name3,jdbcType=VARCHAR},
      </if>
      <if test="name4 != null">
        #{name4,jdbcType=VARCHAR},
      </if>
      <if test="name5 != null">
        #{name5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhxy.domain.Classroom">
    update classroom
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="floor != null">
        floor = #{floor,jdbcType=INTEGER},
      </if>
      <if test="inclass != null">
        inclass = #{inclass,jdbcType=BIT},
      </if>
      <if test="forstudy != null">
        forstudy = #{forstudy,jdbcType=BIT},
      </if>
      <if test="fortest != null">
        fortest = #{fortest,jdbcType=BIT},
      </if>
      <if test="enable != null">
        enable = #{enable,jdbcType=BIT},
      </if>
      <if test="people != null">
        people = #{people,jdbcType=INTEGER},
      </if>
      <if test="name1 != null">
        name1 = #{name1,jdbcType=VARCHAR},
      </if>
      <if test="name2 != null">
        name2 = #{name2,jdbcType=VARCHAR},
      </if>
      <if test="name3 != null">
        name3 = #{name3,jdbcType=VARCHAR},
      </if>
      <if test="name4 != null">
        name4 = #{name4,jdbcType=VARCHAR},
      </if>
      <if test="name5 != null">
        name5 = #{name5,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhxy.domain.Classroom">
    update classroom
    set name = #{name,jdbcType=VARCHAR},
      floor = #{floor,jdbcType=INTEGER},
      inclass = #{inclass,jdbcType=BIT},
      forstudy = #{forstudy,jdbcType=BIT},
      fortest = #{fortest,jdbcType=BIT},
      enable = #{enable,jdbcType=BIT},
      people = #{people,jdbcType=INTEGER},
      name1 = #{name1,jdbcType=VARCHAR},
      name2 = #{name2,jdbcType=VARCHAR},
      name3 = #{name3,jdbcType=VARCHAR},
      name4 = #{name4,jdbcType=VARCHAR},
      name5 = #{name5,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>